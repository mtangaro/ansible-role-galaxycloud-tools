---
# User to launch the Galaxy portal
galaxy_user: galaxy

# Galaxy user UID
GALAXY_UID: "4001"

# Path to install the Galaxy software
galaxy_FS_path: /home/galaxy

# Galaxy directory (usually galaxy or galaxy-dist)
galaxy_directory: galaxy

# Galaxy install path
galaxy_install_path: "{{galaxy_FS_path}}/{{galaxy_directory}}"

# Galaxy config/galaxy.yml path
# Galaxy config file can either be 'ini-paste' (old style) or 'yaml'
galaxy_config_style: "yaml"
galaxy_config_file_extension: "{{ 'yml' if galaxy_config_style in ('yaml', 'yml') else 'ini' }}"
galaxy_config_file_basename: "galaxy.{{ 'yml' if galaxy_config_style in ('yaml', 'yml') else 'ini' }}"
galaxy_config_path: "{{galaxy_install_path}}/config"
galaxy_config_file: "{{ galaxy_config_path }}/{{ galaxy_config_file_basename }}"
galaxy_config_section: "{{ 'galaxy' if galaxy_config_style in ('yaml', 'yml') else 'app:main' }}"

# Galaxy version to install
GALAXY_VERSION: "release_18.05"
galaxy_version_number: '18.05'

# Virtualenv directory
galaxy_venv_path: "{{galaxy_install_path}}/.venv"

# Galaxy custom configuration files and script path
galaxy_custom_config_path: '/etc/galaxy'
galaxy_custom_script_path: '/usr/local/bin'

# Log directory
galaxy_log_path: "/var/log/galaxy"

# Galaxy instance url
galaxy_instance_url: "http://{{ansible_default_ipv4.address}}/galaxy/"

# Galaxy instance ssh public key
galaxy_instance_key_pub: ""

# Galaxy administrator API_KEY. https://wiki.galaxyproject.org/Admin/API
# Please note that this key acts as an alternate means to access your account, and should be treated with the same care as your login password. To be changed by the administrator.
galaxy_admin_api_key: "GALAXY_ADMIN_API_KEY"

# A list of yml files that list the tools to be installed. See `files/tool_list.yaml.sample`
# file for more about the format requirements of this file. The file names must be unique.
galaxy_tools_tool_list_files: [ "tool_list.yaml" ]

galaxy_tools_base_dir: '/data'

galaxy_flavor: 'galaxy-no-tools'

# Set Galaxy flavor recipes branch: https://github.com/indigo-dc/Galaxy-flavors-recipes
galaxy_flavors_recipes_url: 'https://github.com/indigo-dc/Galaxy-flavors-recipes.git'
galaxy_flavors_recipes_dir: '{{ galaxy_tools_base_dir }}/Galaxy-flavors-recipes'
galaxy_flavors_recipes_tag: 'master'

# Set Ephemeris version and path
tools_venv_dir: '/tmp/tools_venv'
ephemeris_version: '0.9.0'

# Create bootstrap user
# if an apy key is not present on galaxy, a new user is created to istall tools and removed.
# This is a very basic implementation. Advanced one is located here: https://raw.githubusercontent.com/indigo-dc/ansible-galaxy-tools/master/files/manage_bootstrap_user.py
# Currently, to create it, few informations are needed:
# galaxy installation path
# galaxy_database_connection
# and pbkdf2 enabled
create_bootstrap_user: false
galaxy_database_connection: 'postgresql://galaxy:galaxy@localhost:5432/galaxy'
use_pbkdf2: true
bootstrap_user_mail: 'bootstrap_user@server.com'
bootstrap_user_name: 'bootstrap_user'
bootstrap_user_password: 'bootstrap_password'
create_random_api_key: true

# add lock file to avoid role re-run during recipe update.
# to re-run the role remove the lock file {{lock_file_path}}/indigo-dc.galaxycloud-tools.lock
lock_file_path: '/var/run'

install_workflows: false
install_data_libraries: false
install_interactive_tours: false

# Galaxy userdata are stored here
export_dir: "/export"

# This role exploits a lite version of galaxy to install data-libraries.
# It install dataset in /home/galaxy/galaxy/database/files/000 by defaults. 
# If the default galaxy database directory is different you have two options.
# By default the role read galaxy.yml and move datasets to file_path dir:
# move_datasets: true
# set_dataset_dest_dir: false
#
# Otherwise you can set the destination directory.
# dataset_dest_dir must exist, since the role will not create it.
# move_datasets: true
# set_dataset_dest_dir: true
# dataset_dest_dir: '/path/to/dir'
move_datasets: true
set_dataset_dest_dir: false
dataset_dest_dir: '{{export_dir}}/galaxy/database/files/'

# add custom resources (i.e. visualisations plugins, custom web pages, etc.).
# since there is no a standard way to retrieve and install
# visualisation plugin, we keep this recipes external
# and implement a common interface to insall these resources.
add_more_assets: false

#______________________________________
# Inform the role if galaxy tools and reference data will be installed
# If yes, galaxy is not started
get_refdata: false

#______________________________________
# enable debug
debug: false
