---
- set_fact:
    postgresql_version: '9.6'
    galaxy_db_port: '5432'

- name: '[EL] Set Postgresql fact'
  set_fact:
    postgresql_pgdata: '/var/lib/pgsql/{{ postgresql_version }}/data'
    postgresql_service_name: 'postgresql-{{ postgresql_version }}'
  when: ansible_os_family == "RedHat"

- name: '[EL] [Docker] Start PostgreSQL only if not running'
  stat: path={{ postgresql_pgdata }}/postmaster.pid
  register: pg_pid
  when:
    - ansible_virtualization_type == "docker"
    - ansible_os_family == "RedHat"

- name: '[EL] [Docker] Start PostgreSQL server'
  shell: '/usr/pgsql-{{ postgresql_version }}/bin/pg_ctl -D {{ postgresql_pgdata }} -w start'
  when:
    - ansible_virtualization_type == "docker"
    - not pg_pid.stat.exists
    - ansible_os_family == "RedHat"
  become: yes
  become_user: postgres

- name: '[Ubuntu] Set Postgresql fact'
  set_fact:
    postgresql_service_name: postgresql
  when: ansible_os_family == "Debian"

- name: '[Ubuntu] [Docker] Start PostgreSQL server'
  shell: '/etc/init.d/postgresql start'
  when:
    - ansible_virtualization_type == "docker"
    - ansible_os_family == "Debian"

- name: '[VM] Start PostgreSQL server'
  service:
    name: '{{ postgresql_service_name }}'
    state: started
  when: ansible_virtualization_type != "docker"

- name: '[VM] Wait PostgreSQL is up'
  wait_for:
    host: 0.0.0.0
    port: '{{ galaxy_db_port }}'
    timeout: 10
